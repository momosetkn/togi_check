{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledMain","styled","div","StyledBackground","process","left","StyledIndicator","App","useState","orientationAlpha","orientationBeta","orientationGamma","motionX","motionY","motionZ","x","state","update","useEffect","window","addEventListener","dat","alpha","beta","gamma","prev","acceleration","y","z","Math","abs","toFixed","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPA0FA,IAAMA,EAAaC,IAAOC,IAAV,iEAKVC,EAAmBF,IAAOC,IAAV,6KAKKE,KACN,qBAAEC,KAAiB,IAAM,QAGxCC,EAAkBL,IAAOC,IAAV,yNAaNK,EAvGf,WAAgB,IAAD,EACWC,mBAAgB,CACtCC,iBAAkB,EAClBC,gBAAiB,EACjBC,iBAAkB,EAClBC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,EAAG,IARQ,mBACNC,EADM,KACCC,EADD,KAoCb,OAzBAC,qBAAU,WACRC,OAAOC,iBAAiB,qBAAqB,SAACC,GAAS,IAC9CC,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,KAAMC,EAASH,EAATG,MACpBP,GAAO,SAAAQ,GAAI,kCAEJA,GAFI,IAGPhB,iBAAkBa,GAAS,EAC3BZ,gBAAiBa,GAAQ,EACzBZ,iBAAkBa,GAAS,UAGjCL,OAAOC,iBAAiB,gBAAgB,SAACC,GACvC,GAAKA,EAAIK,aAAT,CAD+C,MAE7BL,EAAIK,aAAfX,EAFwC,EAExCA,EAAGY,EAFqC,EAErCA,EAAGC,EAFkC,EAElCA,EACbX,GAAO,SAAAQ,GAAI,kCAEJA,GAFI,IAGPb,QAASG,GAAK,EACdF,QAASc,GAAK,EACdb,QAASc,GAAK,EACdb,EAAGU,EAAKV,eAGb,IAGD,eAACf,EAAD,WACE,cAACG,EAAD,CAAkBE,KAAMW,EAAML,iBAAmB,IACjD,cAACL,EAAD,UACE,iCAAOuB,KAAKC,IAAId,EAAML,kBAAkBoB,QAAQ,GAAhD,cAEF,wBAAOC,UAAU,cAAjB,UACE,+BACE,kDACA,6BAAKhB,EAAMP,iBAAiBsB,QAAQ,QAEtC,+BACE,iDACA,6BAAKf,EAAMN,gBAAgBqB,QAAQ,QAErC,+BACE,kDACA,6BAAKf,EAAML,iBAAiBoB,QAAQ,QAEtC,+BACE,yCACA,6BAAKf,EAAMJ,QAAQmB,QAAQ,QAE7B,+BACE,yCACA,6BAAKf,EAAMH,QAAQkB,QAAQ,QAE7B,+BACE,yCACA,6BAAKf,EAAMF,QAAQiB,QAAQ,QAE7B,+BACE,mCACA,6BAAKf,EAAMD,cCrENkB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f3983e05.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport styled from \"styled-components\";\n\ntype State = {\n  orientationAlpha: number,\n  orientationBeta: number,\n  orientationGamma: number,\n  motionX: number,\n  motionY: number,\n  motionZ: number,\n  x: number,\n}\n\nfunction App() {\n  const [state, update] = useState<State>({\n    orientationAlpha: 0,\n    orientationBeta: 0,\n    orientationGamma: 0,\n    motionX: 0,\n    motionY: 0,\n    motionZ: 0,\n    x: 0,\n  });\n\n  useEffect(() => {\n    window.addEventListener(\"deviceorientation\", (dat) => {\n      const {alpha, beta, gamma} = dat;\n      update(prev => (\n        {\n          ...prev,\n          orientationAlpha: alpha || 0,\n          orientationBeta: beta || 0,\n          orientationGamma: gamma || 0,\n        }));\n    });\n    window.addEventListener(\"devicemotion\", (dat) => {\n      if (!dat.acceleration) return;\n      const {x, y, z} = dat.acceleration;\n      update(prev => (\n        {\n          ...prev,\n          motionX: x || 0,\n          motionY: y || 0,\n          motionZ: z || 0,\n          x: prev.x++,\n        }));\n    });\n  }, []);\n\n  return (\n    <StyledMain>\n      <StyledBackground left={state.orientationGamma > 0}/>\n      <StyledIndicator>\n        <span>{Math.abs(state.orientationGamma).toFixed(1)}åº¦</span>\n      </StyledIndicator>\n      <table className=\"value-table\">\n        <tr>\n          <td>orientationAlpha</td>\n          <td>{state.orientationAlpha.toFixed(1)}</td>\n        </tr>\n        <tr>\n          <td>orientationBeta</td>\n          <td>{state.orientationBeta.toFixed(1)}</td>\n        </tr>\n        <tr>\n          <td>orientationGamma</td>\n          <td>{state.orientationGamma.toFixed(1)}</td>\n        </tr>\n        <tr>\n          <td>motionX</td>\n          <td>{state.motionX.toFixed(1)}</td>\n        </tr>\n        <tr>\n          <td>motionY</td>\n          <td>{state.motionY.toFixed(1)}</td>\n        </tr>\n        <tr>\n          <td>motionZ</td>\n          <td>{state.motionZ.toFixed(1)}</td>\n        </tr>\n        <tr>\n          <td>x</td>\n          <td>{state.x}</td>\n        </tr>\n      </table>\n    </StyledMain>\n  );\n}\n\nconst StyledMain = styled.div`\n  height: 100vh;\n  width: 100vw;  \n`;\n\nconst StyledBackground = styled.div<{left: boolean}>`\n  height: 100vh;\n  width: 100vw;\n  z-index: -1;\n  position: absolute;\n  background-image: url(\"${process.env.PUBLIC_URL}/hocho.jpg\");\n  transform: scale(${({left}) => left ? \"1\" : \"-1\"}, 1);\n`;\n\nconst StyledIndicator = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  span {\n    background: #00000090;\n    color: #ffffff;\n    font-size: 10vw;\n  }\n`;\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}