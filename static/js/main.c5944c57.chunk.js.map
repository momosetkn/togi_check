{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledMain","styled","div","StyledBackground","process","left","StyledIndicator","App","useState","orientationAlpha","orientationBeta","orientationGamma","accelerationX","accelerationY","accelerationZ","measurementCount","speedX","speedY","speedZ","distance","measurementTime","Date","getTime","diffTime","state","update","useEffect","window","addEventListener","dat","alpha","beta","gamma","prev","acceleration","x","y","z","nowMeasurementTime","getNowDistanceAndSpeed","speed","nowSpeed","nowDistance","DISTANCE_AND_SPEED_ZERO","distanceAndSpeedX","distanceAndSpeedY","distanceAndSpeedZ","Math","sqrt","abs","toFixed","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5944c57.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport styled from \"styled-components\";\n\ntype State = {\n  orientationAlpha: number,\n  orientationBeta: number,\n  orientationGamma: number,\n  accelerationX: number,\n  accelerationY: number,\n  accelerationZ: number,\n  measurementCount: number,// TODO: 要らない\n  speedX: number,\n  speedY: number,\n  speedZ: number,\n  distance: number,\n  measurementTime: number,\n  diffTime: number,\n}\n\nfunction App() {\n  const [state, update] = useState<State>({\n    orientationAlpha: 0,\n    orientationBeta: 0,\n    orientationGamma: 0,\n    accelerationX: 0,\n    accelerationY: 0,\n    accelerationZ: 0,\n    measurementCount: 0,\n    speedX: 0,\n    speedY: 0,\n    speedZ: 0,\n    distance: 0,\n    measurementTime: new Date().getTime(),\n    diffTime: 0,\n  });\n\n  useEffect(() => {\n    window.addEventListener(\"deviceorientation\", (dat) => {\n      const {alpha, beta, gamma} = dat;\n      update(prev => (\n        {\n          ...prev,\n          orientationAlpha: alpha || 0,\n          orientationBeta: beta || 0,\n          orientationGamma: gamma || 0,\n        }));\n    });\n    window.addEventListener(\"devicemotion\", (dat) => {\n      if (!dat.acceleration) return;\n      const { x, y, z } = dat.acceleration;\n\n      const nowMeasurementTime = new Date().getTime();\n\n      update(prev => (\n        {\n          ...prev,\n          accelerationX: x || 0,\n          accelerationY: y || 0,\n          accelerationZ: z || 0,\n          measurementCount: prev.measurementCount+1,\n          measurementTime: nowMeasurementTime,\n          diffTime: nowMeasurementTime - prev.measurementTime,\n        }));\n    });\n  }, []);\n\n  useEffect(() => {\n      const { accelerationX, accelerationY, accelerationZ, speedX, speedY, speedZ, diffTime } = state;\n\n      const getNowDistanceAndSpeed = ({acceleration, speed}:{acceleration: number, speed: number}) => {\n        const additionalSpeed = acceleration * diffTime;\n        const nowSpeed = additionalSpeed + speed\n        const nowDistance =  nowSpeed * diffTime\n        return {nowDistance, nowSpeed};\n      };\n\n\n      // 加速度が0だったら、距離も0（スピード計算が正確じゃないため、これを入れないと静止時にスピードが0にならない）\n    const { distance, distanceAndSpeedX, distanceAndSpeedY, distanceAndSpeedZ } = (() => {\n      if (accelerationX === 0 && accelerationY === 0 && accelerationZ === 0) {\n        const DISTANCE_AND_SPEED_ZERO = {nowDistance: 0, nowSpeed: 0}\n        return {\n          distance: 0,\n          distanceAndSpeedX: DISTANCE_AND_SPEED_ZERO,\n          distanceAndSpeedY: DISTANCE_AND_SPEED_ZERO,\n          distanceAndSpeedZ: DISTANCE_AND_SPEED_ZERO\n        };\n      }\n\n      const distanceAndSpeedX = getNowDistanceAndSpeed({acceleration: accelerationX || 0, speed: speedX});\n      const distanceAndSpeedY = getNowDistanceAndSpeed({acceleration: accelerationY || 0, speed: speedY});\n      const distanceAndSpeedZ = getNowDistanceAndSpeed({acceleration: accelerationZ || 0, speed: speedZ});\n      const distance =  Math.sqrt(\n        Math.sqrt(distanceAndSpeedX.nowDistance ** 2 + distanceAndSpeedY.nowDistance ** 2) ** 2\n        + distanceAndSpeedZ.nowDistance ** 2\n      );\n      return { distance, distanceAndSpeedX, distanceAndSpeedY, distanceAndSpeedZ };\n    })();\n\n    update(prev => (\n        {\n          ...prev,\n          speedX: distanceAndSpeedX.nowSpeed,\n          speedY: distanceAndSpeedY.nowSpeed,\n          speedZ: distanceAndSpeedZ.nowSpeed,\n          distance: prev.distance + distance,\n        }));\n    // eslint-disable-next-line\n  }, [\n    state.accelerationX,\n    state.accelerationY,\n    state.accelerationZ,\n    state.speedX,\n    state.speedY,\n    state.speedZ,\n    state.diffTime,\n  ]);\n\n  return (\n    <StyledMain>\n      <StyledBackground left={state.orientationGamma > 0}/>\n      <StyledIndicator>\n        <span>{Math.abs(state.orientationGamma).toFixed(1)}度</span>\n      </StyledIndicator>\n      <table className=\"value-table\">\n        <tr>\n          <td>orientationAlpha</td>\n          <td>{state.orientationAlpha.toFixed(1)}</td>\n        </tr>\n        <tr>\n          <td>orientationBeta</td>\n          <td>{state.orientationBeta.toFixed(1)}</td>\n        </tr>\n        <tr>\n          <td>orientationGamma</td>\n          <td>{state.orientationGamma.toFixed(1)}</td>\n        </tr>\n        <tr>\n          <td>motionX</td>\n          <td>{state.accelerationX.toFixed(1)}</td>\n        </tr>\n        <tr>\n          <td>motionY</td>\n          <td>{state.accelerationY.toFixed(1)}</td>\n        </tr>\n        <tr>\n          <td>motionZ</td>\n          <td>{state.accelerationZ.toFixed(1)}</td>\n        </tr>\n        <tr>\n          <td>x</td>\n          <td>{state.measurementCount}</td>\n        </tr>\n        <tr>\n          <td>speedX</td>\n          <td>{state.speedX}</td>\n        </tr>\n        <tr>\n          <td>speedY</td>\n          <td>{state.speedY}</td>\n        </tr>\n        <tr>\n          <td>speedZ</td>\n          <td>{state.speedZ}</td>\n        </tr>\n        <tr>\n          <td>distance</td>\n          <td>{state.distance/1_000}</td>\n        </tr>\n      </table>\n    </StyledMain>\n  );\n}\n\nconst StyledMain = styled.div`\n  height: 100vh;\n  width: 100vw;  \n`;\n\nconst StyledBackground = styled.div<{left: boolean}>`\n  height: 100vh;\n  width: 100vw;\n  z-index: -1;\n  position: absolute;\n  background-image: url(\"${process.env.PUBLIC_URL}/hocho.jpg\");\n  transform: scale(${({left}) => left ? \"1\" : \"-1\"}, 1);\n`;\n\nconst StyledIndicator = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  span {\n    background: #00000090;\n    color: #ffffff;\n    font-size: 10vw;\n  }\n`;\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}